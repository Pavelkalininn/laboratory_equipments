# Generated by Django 3.2.15 on 2022-10-10 11:02

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator(regex='^[\\w.@+-]+\\Z')], verbose_name='Логин')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('telegram_id', models.PositiveIntegerField(null=True, unique=True, verbose_name='Телеграм id')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('-id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=256, unique=True, verbose_name='Адрес')),
            ],
            options={
                'ordering': ['address'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Наименование документа')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory', models.CharField(max_length=30, unique=True, verbose_name='Инвентарный номер')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование')),
                ('serial_number', models.CharField(max_length=256, verbose_name='Серийный номер')),
                ('model', models.CharField(max_length=256, verbose_name='Модель')),
                ('manufacturer', models.CharField(max_length=256, verbose_name='Производитель')),
                ('nomenclature_key', models.PositiveBigIntegerField(verbose_name='Код ТН ВЭД')),
                ('document_path', models.CharField(max_length=256, verbose_name='Путь к папке с эксплуатационными документами')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('documents', models.ManyToManyField(related_name='equipments', to='equipments.Document', verbose_name='эксплуатационная документация в наличии')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Наименование организации')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Rent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата передачи в аренду')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rents', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rents', to='equipments.equipment', verbose_name='оборудование')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rents_from_owner', to='equipments.organization', verbose_name='Владелец')),
                ('renter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rents_from_renter', to='equipments.organization', verbose_name='Арендатор')),
            ],
            options={
                'ordering': ['-date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Movement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата перевозки оборудования на новое место')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='equipments.destination', verbose_name='место нахождения')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='equipments.equipment', verbose_name='оборудование')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование/номер документа о калибровке')),
                ('date', models.DateField(verbose_name='Дата калибровки')),
                ('validity_period', models.DateField(verbose_name='Дата окончания действия калибровки')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibrations', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibrations', to='equipments.equipment', verbose_name='оборудование')),
            ],
            options={
                'ordering': ['-validity_period'],
            },
        ),
        migrations.CreateModel(
            name='Attestation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование/номер аттестата')),
                ('date', models.DateField(verbose_name='Дата аттестации')),
                ('validity_period', models.DateField(verbose_name='Дата окончания действия аттестата')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attestations', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attestations', to='equipments.equipment', verbose_name='оборудование')),
            ],
            options={
                'ordering': ['-validity_period'],
            },
        ),
    ]
